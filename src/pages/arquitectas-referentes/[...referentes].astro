---
import type { GetStaticPaths } from "astro";
import { nameToPath } from "@utils/nameToPath";
import { getPhotos } from "@utils/getPhotos";
import { LEAD_ARCHITECTS } from "@data/lead-architects";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Paragraph from "@components/Paragraph.astro";
import Footer from "@components/Footer.astro";
import H2 from "@components/H2.astro";

import { Vimeo } from "astro-embed";
import { Image } from "astro:assets";

export const getStaticPaths = (async () => {
  return LEAD_ARCHITECTS.map((architect) => {
    return {
      params: { referentes: nameToPath({ name: architect.short_name }) },
      props: architect,
    };
  });
}) satisfies GetStaticPaths;

const {
  id,
  name,
  short_name,
  birth_date,
  birth_place,
  university,
  description,
  quote,
  color,
  assets,
  videoId,
} = Astro.props;

const gallery = await getPhotos(assets);
const RGB = color[0];
const colorName = color[1];
---

<Layout title={name} bg={colorName}>
  <Header />
  <main class="flex flex-col items-start h-full w-full gap-10 mb-10 px-6">
    <header class="font-source-code mt-2">
      <p class="text-light-grey">arquitecta referente</p>
      <h1
        class="text-[3.5rem] max-w-xl leading-none font-black text-dark-grey"
        transition:name=`name-${id}`
      >
        {short_name}
      </h1>
    </header>
    <div class="w-full flex flex-col gap-4 justify-between text-primary">
      <aside
        id="video-wrapper"
        class="aspect-video overflow-hidden object-cover rounded-xl w-full max-w-4xl h-fit flex-shrink-0 sticky top-4 z-10 mb-4"
      >
        <Vimeo id={videoId} params={`color=${color.slice(1)}`} />
      </aside>
      <article class="max-w-lg h-full flex flex-col gap-10 text-dark-grey">
        <section>
          <ul>
            <li>
              <h3>
                <strong class="font-medium">Nombre:</strong>
                {" "}{name}
              </h3>
            </li>
            <li>
              <h3>
                <strong class="font-medium">Fecha de nacimiento:</strong>
                {" "}{birth_date}
              </h3>
            </li>
            <li>
              <h3>
                <strong class="font-medium">Lugar de nacimiento:</strong>
                {" "}{birth_place}
              </h3>
            </li>
            <li>
              <h3>
                <strong class="font-medium">Estudios de Arquitectura:</strong>
                {" "}{university}
              </h3>
            </li>
          </ul>
        </section>
        <section>
          <H2>Trayectoria</H2>
          <Paragraph description={description} />
          <blockquote
            class="leading-tight font-source-code font-normal text-sm mt-6"
          >
            <q class="italic">{quote}</q>
            <footer class="text-end">-Arq. {short_name}</footer>
          </blockquote>
        </section>
        <section>
          <H2>Material Gráfico</H2>
          <figure class="columns-[3_125px] gap-x-2">
            {
              gallery.map((photo) => (
                <a
                  id="image-wrapper"
                  href=""
                  class="mb-2 overflow-hidden block rounded-lg hover:scale-105 duration-150"
                >
                  <Image
                    src={photo}
                    alt="Imágen del trabajo ..."
                    class=" max-w-full"
                    height={900}
                  />
                </a>
              ))
            }
          </figure>
        </section>
      </article>
    </div>
    <div>
      <!-- GALLERY -->
    </div>
  </main>
  <Footer />
</Layout>

<style define:vars={{ RGB }}>
  aside {
    box-shadow: 0 -12px 60px -30px var(--RGB);
    animation: shadow 4s linear infinite alternate;
  }

  @keyframes shadow {
    from {
      box-shadow: 0 -12px 60px -30px var(--RGB);
    }
    to {
      box-shadow: 0 -12px 60px -10px var(--RGB);
    }
  }
</style>

<script>
  function loadGalleryHandler() {
    const images = document.querySelectorAll("#image-wrapper");

    function showGallery(e: Event) {
      e.preventDefault();
      console.log("fire");
    }

    images.forEach((image) => {
      image.addEventListener("click", showGallery);
    });
  }

  document.addEventListener("astro:page-load", loadGalleryHandler);
  // const video = document.getElementById("video-wrapper");

  // window.addEventListener("scroll", () => {
  //   const videoTopOffset = video?.getBoundingClientRect().top;
  //   console.log(videoTopOffset);
  //   if (videoTopOffset && videoTopOffset <= 20) {
  //     video.style.position = "fixed";
  //   } else {
  //     video.style.position = "";
  //   }
  // });
</script>
