---
import { nameToPath } from "@utils/nameToPath";
interface Props {
  list: Array<string>;
  title?: string;
  hrefPrefix?: string;
}

const { list, title, hrefPrefix } = Astro.props;

const menuHeight = hrefPrefix?.includes("referentes")
  ? "peer-checked:h-[11rem]"
  : "peer-checked:h-[8.5rem]";
---

<li
  class="w-fit text-dark-grey font-source-code group/link group-hover/nav:opacity-60 hover:!opacity-100 transition-opacity duration-150 relative"
>
  <input type="checkbox" id=`${title}-dropdown-menu` hidden class="peer" />
  <label
    for=`${title}-dropdown-menu`
    class="flex items-center gap-1 justify-center cursor-pointer w-fit mx-auto relative after:content-['arquitectas'] after:absolute after:-top-3 lg:after:left-0 lg:after:-top-2 after:text-sm after:text-light-grey"
  >
    {title}
    <svg
      class="h-5 w-5 inline-block mb-2"
      viewBox="0 0 20 20"
      fill="currentColor"
      aria-hidden="true"
    >
      <path
        fill-rule="evenodd"
        d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
        clip-rule="evenodd"></path>
    </svg>
  </label>
  <ul
    role="list"
    class=`rounded-md h-0
flex-col text-sm ${menuHeight} overflow-hidden flex whitespace-nowrap transition-all duration-150s group/dropdown-list z-20 xl:absolute gap-1`
  >
    {
      list.map((item) => (
        <li class="w-fit text-dark-grey bg-white rounded-md font-source-code group/dropdown-item px-2 group-hover/dropdown-list:opacity-50 hover:!opacity-100 ml-16 xl:ml-0">
          <a href={`/${hrefPrefix}/${nameToPath({ name: item })}`}>
            {item}
            <div class="bg-light-grey h-px w-0 group-hover/dropdown-item:w-full transition-[width] duration-150" />
          </a>
        </li>
      ))
    }
  </ul>
</li>

<script>
  function closeCheckbox() {
    const checkboxList = document.querySelectorAll(
      "[id*=dropdown-menu]"
    ) as NodeListOf<HTMLInputElement>;
    checkboxList.forEach((checkbox, i) => {
      checkbox.addEventListener("change", () => {
        checkboxList[-i + 1].checked = false;
      });
    });
  }

  document.addEventListener("astro:page-load", closeCheckbox);
  if (!document.startViewTransition) closeCheckbox();
</script>
